//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarWebsite.MakeServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MakeServiceReference.IMake")]
    public interface IMake {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMake/Message", ReplyAction="http://tempuri.org/IMake/MessageResponse")]
        string Message();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMake/Message", ReplyAction="http://tempuri.org/IMake/MessageResponse")]
        System.Threading.Tasks.Task<string> MessageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMake/GetMakes", ReplyAction="http://tempuri.org/IMake/GetMakesResponse")]
        ApplicationServices.DTOs.MakeDto[] GetMakes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMake/GetMakes", ReplyAction="http://tempuri.org/IMake/GetMakesResponse")]
        System.Threading.Tasks.Task<ApplicationServices.DTOs.MakeDto[]> GetMakesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMake/GetMakeById", ReplyAction="http://tempuri.org/IMake/GetMakeByIdResponse")]
        ApplicationServices.DTOs.MakeDto GetMakeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMake/GetMakeById", ReplyAction="http://tempuri.org/IMake/GetMakeByIdResponse")]
        System.Threading.Tasks.Task<ApplicationServices.DTOs.MakeDto> GetMakeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMake/PostMake", ReplyAction="http://tempuri.org/IMake/PostMakeResponse")]
        string PostMake(ApplicationServices.DTOs.MakeDto makeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMake/PostMake", ReplyAction="http://tempuri.org/IMake/PostMakeResponse")]
        System.Threading.Tasks.Task<string> PostMakeAsync(ApplicationServices.DTOs.MakeDto makeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMake/PutMake", ReplyAction="http://tempuri.org/IMake/PutMakeResponse")]
        string PutMake(ApplicationServices.DTOs.MakeDto makeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMake/PutMake", ReplyAction="http://tempuri.org/IMake/PutMakeResponse")]
        System.Threading.Tasks.Task<string> PutMakeAsync(ApplicationServices.DTOs.MakeDto makeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMake/DeleteMake", ReplyAction="http://tempuri.org/IMake/DeleteMakeResponse")]
        string DeleteMake(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMake/DeleteMake", ReplyAction="http://tempuri.org/IMake/DeleteMakeResponse")]
        System.Threading.Tasks.Task<string> DeleteMakeAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMakeChannel : CarWebsite.MakeServiceReference.IMake, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MakeClient : System.ServiceModel.ClientBase<CarWebsite.MakeServiceReference.IMake>, CarWebsite.MakeServiceReference.IMake {
        
        public MakeClient() {
        }
        
        public MakeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MakeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MakeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MakeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Message() {
            return base.Channel.Message();
        }
        
        public System.Threading.Tasks.Task<string> MessageAsync() {
            return base.Channel.MessageAsync();
        }
        
        public ApplicationServices.DTOs.MakeDto[] GetMakes() {
            return base.Channel.GetMakes();
        }
        
        public System.Threading.Tasks.Task<ApplicationServices.DTOs.MakeDto[]> GetMakesAsync() {
            return base.Channel.GetMakesAsync();
        }
        
        public ApplicationServices.DTOs.MakeDto GetMakeById(int id) {
            return base.Channel.GetMakeById(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationServices.DTOs.MakeDto> GetMakeByIdAsync(int id) {
            return base.Channel.GetMakeByIdAsync(id);
        }
        
        public string PostMake(ApplicationServices.DTOs.MakeDto makeDto) {
            return base.Channel.PostMake(makeDto);
        }
        
        public System.Threading.Tasks.Task<string> PostMakeAsync(ApplicationServices.DTOs.MakeDto makeDto) {
            return base.Channel.PostMakeAsync(makeDto);
        }
        
        public string PutMake(ApplicationServices.DTOs.MakeDto makeDto) {
            return base.Channel.PutMake(makeDto);
        }
        
        public System.Threading.Tasks.Task<string> PutMakeAsync(ApplicationServices.DTOs.MakeDto makeDto) {
            return base.Channel.PutMakeAsync(makeDto);
        }
        
        public string DeleteMake(int id) {
            return base.Channel.DeleteMake(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteMakeAsync(int id) {
            return base.Channel.DeleteMakeAsync(id);
        }
    }
}
