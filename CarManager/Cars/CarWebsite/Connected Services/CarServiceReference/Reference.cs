//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarWebsite.CarServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CarServiceReference.ICar")]
    public interface ICar {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICar/Message", ReplyAction="http://tempuri.org/ICar/MessageResponse")]
        string Message();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICar/Message", ReplyAction="http://tempuri.org/ICar/MessageResponse")]
        System.Threading.Tasks.Task<string> MessageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICar/GetCars", ReplyAction="http://tempuri.org/ICar/GetCarsResponse")]
        ApplicationServices.DTOs.CarDto[] GetCars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICar/GetCars", ReplyAction="http://tempuri.org/ICar/GetCarsResponse")]
        System.Threading.Tasks.Task<ApplicationServices.DTOs.CarDto[]> GetCarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICar/GetCarById", ReplyAction="http://tempuri.org/ICar/GetCarByIdResponse")]
        ApplicationServices.DTOs.CarDto GetCarById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICar/GetCarById", ReplyAction="http://tempuri.org/ICar/GetCarByIdResponse")]
        System.Threading.Tasks.Task<ApplicationServices.DTOs.CarDto> GetCarByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICar/PostCar", ReplyAction="http://tempuri.org/ICar/PostCarResponse")]
        string PostCar(ApplicationServices.DTOs.CarDto carDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICar/PostCar", ReplyAction="http://tempuri.org/ICar/PostCarResponse")]
        System.Threading.Tasks.Task<string> PostCarAsync(ApplicationServices.DTOs.CarDto carDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICar/PutCar", ReplyAction="http://tempuri.org/ICar/PutCarResponse")]
        string PutCar(ApplicationServices.DTOs.CarDto carDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICar/PutCar", ReplyAction="http://tempuri.org/ICar/PutCarResponse")]
        System.Threading.Tasks.Task<string> PutCarAsync(ApplicationServices.DTOs.CarDto carDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICar/DeleteCar", ReplyAction="http://tempuri.org/ICar/DeleteCarResponse")]
        string DeleteCar(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICar/DeleteCar", ReplyAction="http://tempuri.org/ICar/DeleteCarResponse")]
        System.Threading.Tasks.Task<string> DeleteCarAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICarChannel : CarWebsite.CarServiceReference.ICar, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarClient : System.ServiceModel.ClientBase<CarWebsite.CarServiceReference.ICar>, CarWebsite.CarServiceReference.ICar {
        
        public CarClient() {
        }
        
        public CarClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CarClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Message() {
            return base.Channel.Message();
        }
        
        public System.Threading.Tasks.Task<string> MessageAsync() {
            return base.Channel.MessageAsync();
        }
        
        public ApplicationServices.DTOs.CarDto[] GetCars() {
            return base.Channel.GetCars();
        }
        
        public System.Threading.Tasks.Task<ApplicationServices.DTOs.CarDto[]> GetCarsAsync() {
            return base.Channel.GetCarsAsync();
        }
        
        public ApplicationServices.DTOs.CarDto GetCarById(int id) {
            return base.Channel.GetCarById(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationServices.DTOs.CarDto> GetCarByIdAsync(int id) {
            return base.Channel.GetCarByIdAsync(id);
        }
        
        public string PostCar(ApplicationServices.DTOs.CarDto carDto) {
            return base.Channel.PostCar(carDto);
        }
        
        public System.Threading.Tasks.Task<string> PostCarAsync(ApplicationServices.DTOs.CarDto carDto) {
            return base.Channel.PostCarAsync(carDto);
        }
        
        public string PutCar(ApplicationServices.DTOs.CarDto carDto) {
            return base.Channel.PutCar(carDto);
        }
        
        public System.Threading.Tasks.Task<string> PutCarAsync(ApplicationServices.DTOs.CarDto carDto) {
            return base.Channel.PutCarAsync(carDto);
        }
        
        public string DeleteCar(int id) {
            return base.Channel.DeleteCar(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCarAsync(int id) {
            return base.Channel.DeleteCarAsync(id);
        }
    }
}
